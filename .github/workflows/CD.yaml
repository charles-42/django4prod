    # name of our workflow
    name: Django CD Workflow

    # triggers for our workflow
    on:
      # opening a pull request to master and develop branch will be a trigger
        pull_request:
            branches:
            - main
            paths:
            - 'app4prod/**' # Specify the path to the app4prod directory
    
    #  jobs definition
    jobs:
        health-check-job: # health check job for testing and code formatting check
        
            runs-on: ubuntu-latest # os for running the job
            
            env:
                SECRET_KEY: 'notsecret'
                DJANGO_ENV: 'production'
                ALLOWED_HOSTS: '*'
                NAME: ${{ secrets.DBNAME }}
                USER: ${{ secrets.DBUSER }}
                PASSWORD: ${{ secrets.DBPASSWORD }}
                HOST: ${{ secrets.DBHOST }}

            
            steps:
                - name: Checkout code # checking our the code at current commit that triggers the workflow
                  uses: actions/checkout@v2
    
                - name: Cache dependency # caching dependency will make our build faster.
                  uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
                  with:
                        path: ~/.cache/pip
                        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                        restore-keys: |
                            ${{ runner.os }}-pip-
    
                - name: Setup python environment # setting python environment to 3.x
                  uses: actions/setup-python@v2
                  with:
                    python-version: '3.9' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
            
                - name: Check Python version # checking the python version to see if 3.x is installed.
                  run: python --version
    
                - name: Install requirements # install application requirements
                  run: pip install -r app4prod/requirements.txt
    
                - name: Check Syntax # check code formatting
                  run: pycodestyle --statistics --ignore=E501 app4prod

                - name: Run Test  # running tests
                  working-directory: ./app4prod
                  run: pytest tests/test_database.py

        build-and-push:
            runs-on: ubuntu-latest

            steps:
                      
                - name: Checkout code # checking our the code at current commit that triggers the workflow
                  uses: actions/checkout@v2
                  
                - name: Set up Docker Buildx
                  uses: docker/setup-buildx-action@v1
                  
                      
                - name: Login to Azure Container Registry
                  uses: azure/docker-login@v1
                  with:
                    login-server: djangoacrbeniac.azurecr.io
                    username: ${{ secrets.ACR_USERNAME }}
                    password: ${{ secrets.ACR_PASSWORD }}
                  
                      
                - name: Build and Push to Azure Container Registry
                  uses: docker/build-push-action@v2
                  with:
                    context: .
                    file: app4prod/Dockerfile
                    push: true
                    tags: djangoacrbeniac.azurecr.io/django4prod:latest 
        

                - name: Login to Azure CLI
                  uses: azure/login@v1
                  with:
                    creds: ${{ secrets.AZURE_CREDENTIALS }}

                - name: Red√©marrer Azure App Service
                  run: |
                    az webapp restart --name django-on-azure-app-beniac --resource-group azure-django-gunicorn-dockerRG